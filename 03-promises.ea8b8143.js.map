{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAASC,SAASC,cAAc,SAChCC,EAAQ,GAyBd,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,CAAEN,WAAUC,UAEtBM,EAAO,CAAEP,WAAUC,S,GAClBA,E,IAhCPN,EAAOc,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAaC,OAAOlB,EAAOM,MAAMa,OACjCC,EAAOF,OAAOlB,EAAOoB,KAAKD,OAChChB,EAAMkB,OAASH,OAAOlB,EAAOsB,OAAOH,OAEpC,IACE,IAAII,EAAW,EAAGC,EAAQP,EAC1BM,GAAYpB,EAAMkB,OAClBE,GAAY,EAGZnB,EAAcmB,EADdC,GAASJ,GAENK,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBR,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE9DwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBR,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formEl = document.querySelector('.form');\nconst array = [];\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const delayValue = Number(formEl.delay.value);\n  const step = Number(formEl.step.value);\n  array.lenght = Number(formEl.amount.value);\n\n  for (\n    let position = 1, delay = delayValue;\n    position <= array.lenght;\n    position += 1\n  ) {\n    delay += step;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$array","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","step","lenght","amount","position1","delay1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ea8b8143.js.map"}